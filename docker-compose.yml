version: "3.9"

services:
  db:
    image: postgres:15
    container_name: db
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: chat
      POSTGRES_REPLICATION_USER: replica
      POSTGRES_REPLICATION_PASSWORD: replicapass
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data

  db-replica:
    image: postgres:15
    container_name: db-replica
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: chat
      POSTGRES_REPLICATION_MODE: standby
      POSTGRES_REPLICATION_HOST: db
      POSTGRES_REPLICATION_USER: replica
      POSTGRES_REPLICATION_PASSWORD: replicapass
    depends_on:
      - db
    ports:
      - "5433:5432"
    volumes:
      - db_replica_data:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"

  api1:
    build: ./api
    container_name: api1
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=chat
      - DB_USER=user
      - DB_PASSWORD=pass
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - db
      - redis
    ports:
      - "5001:5000"

  api2:
    build: ./api
    container_name: api2
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=chat
      - DB_USER=user
      - DB_PASSWORD=pass
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - db
      - redis
    ports:
      - "5002:5000"

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "8080:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/html:/usr/share/nginx/html
    depends_on:
      - api1
      - api2

  

volumes:
  db_data:
  db_replica_data:
  grafana_data:
